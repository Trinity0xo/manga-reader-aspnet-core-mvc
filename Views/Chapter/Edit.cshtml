@model WEBTRUYEN.Models.Chapter

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Cập nhật chương";
}

<nav class="mt-2 mb-4" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#">Dashboard</a></li>
        <li class="breadcrumb-item"><a asp-action="Index">Danh sách truyện</a></li>
        <li class="breadcrumb-item">
            <a asp-controller="Comic" asp-action="Details" asp-route-id="@Model.ComicId">Chi tiết truyện</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Cập nhật chương</li>
    </ol>
</nav>

<h3 class="mb-5">📚 Cập nhật chương</h3>

<div class="row">
    <div class="col-md-4">
        <form asp-action="ConfirmEdit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group mb-4">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="d-flex gap-3 mb-4">
				<input type="submit" value="Cập nhật" class="btn btn-warning" />
                <a asp-controller="Comic" asp-action="Details" class="btn btn-success" asp-route-id="@Model.ComicId">Quay lại</a>
            </div>
            <hr />
            <div class="form-group mb-4">
                <label for="ImageUrls" class="control-label">Chọn nhiệu trang ảnh!!!</label>
                <input id="imageInput" type="file" name="ImageUrls" class="form-control" multiple />
            </div>
        </form>
    </div>
</div>

<hr />

<p>Các trang truyện ( sau khi cập nhật thì các trang truyện cũ sẽ bị xóa thay thế bằng những trang mới )</p>
<div id="imagePreviewContainer" class="d-flex flex-wrap">
    <div class="row">
        @if (Model.Pages != null && Model.Pages.Any())
        {
            @foreach (var item in Model.Pages)
            {
                <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
                    <img src="@Html.DisplayFor(modelItem => item.ImageUrl)" style="border-radius: 8px; width:100%; margin-bottom:24px; object-fit:cover; box-shadow:0px 2px 5px rgba(0,0,0,0.2)" />
                </div>
            }
        }
    </div>
</div>

<script>
    document.getElementById("imageInput").addEventListener("change", function () {
        const previewContainer = document.querySelector("#imagePreviewContainer .row");
        previewContainer.innerHTML = "";

        const allowedExtensions = ["jpg", "jpeg", "png", "gif", "webp"];
        const files = Array.from(this.files);

        const filePromises = files.map((file) => {
            return new Promise((resolve, reject) => {
                const fileExtension = file.name.split('.').pop().toLowerCase();
                if (!allowedExtensions.includes(fileExtension)) {
                    alert("Only JPG, PNG, GIF, and WEBP images are allowed.");
                    reject();
                    return;
                }

                const reader = new FileReader();
                reader.onload = function (e) {
                    resolve(e.target.result);
                };
                reader.onerror = reject;
                reader.readAsDataURL(file);
            });
        });

        Promise.all(filePromises)
            .then((imageURLs) => {
                imageURLs.forEach((imageURL) => {

                    const col = document.createElement("div");
                    col.className = "col-xs-12 col-sm-6 col-md-4 col-lg-3";

                    const img = document.createElement("img");
                    img.src = imageURL;
                    img.style.width = "100%";
                    img.style.objectFit = "cover";
                    img.style.borderRadius = "8px";
                    img.style.marginBottom = "24px";
                    img.style.boxShadow = "0 2px 5px rgba(0,0,0,0.2)";

                    col.appendChild(img);
                    previewContainer.prepend(col);
                });
            })
            .catch((error) => console.error("Error loading images:", error));
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
