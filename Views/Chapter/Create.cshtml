@model WEBTRUYEN.Models.Chapter

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Tạo chương";
}

<nav class="mt-2 mb-4" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#">Dashboard</a></li>
        <li class="breadcrumb-item"><a asp-action="Index">Danh sách truyện</a></li>
        <li class="breadcrumb-item">
            <a asp-controller="Comic" asp-action="Details" asp-route-id="@Model.ComicId">Chi tiết truyện</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Tạo chương</li>
    </ol>
</nav>

<h3 class="mb-5">📚 Tạo chương</h3>

<div class="row">
    <div class="col-md-4">
        <form asp-action="ConfirmCreate" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group mb-4">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <input type="hidden" asp-for="ComicId" />

            <div class="d-flex gap-3">
                <input type="submit" value="Lưu" class="btn btn-primary" />
                <a asp-controller="Comic" asp-action="Details" class="btn btn-success" asp-route-id="@Model.ComicId">Quay lại</a>
            </div>
            <hr/>
            <div class="form-group mb-3">
                <label for="ImageUrls" class="control-label">Chọn nhiệu trang ảnh!!!</label>
                <input id="imageInput" type="file" name="ImageUrls" class="form-control" multiple />
            </div>
        </form>
    </div>
</div>

<hr />

<p>Xem trước (Theo thứ tự trên xuống)</p>
<div id="imagePreviewContainer" class="d-flex flex-wrap"></div>

<script>
    document.getElementById("imageInput").addEventListener("change", function () {
        const previewContainer = document.getElementById("imagePreviewContainer");
        previewContainer.innerHTML = ""; 

        const allowedExtensions = ["jpg", "jpeg", "png", "gif", "webp"];
        const files = this.files;

        for (let file of files) {
            const fileExtension = file.name.split('.').pop().toLowerCase();

            if (!allowedExtensions.includes(fileExtension)) {
                alert("Only JPG, PNG, GIF, and WEBP images are allowed.");
                this.value = "";
                previewContainer.innerHTML = "";
                return;
            }

            const reader = new FileReader();
            reader.onload = function (e) {
                const img = document.createElement("img");
                img.src = e.target.result;
                img.style.width = "100%";
                img.style.objectFit = "cover";
                img.style.borderRadius = "8px";
                img.style.margin = "5px";
                img.style.boxShadow = "0 2px 5px rgba(0,0,0,0.2)";
                previewContainer.prepend(img);
            };

            reader.readAsDataURL(file);
        }
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
