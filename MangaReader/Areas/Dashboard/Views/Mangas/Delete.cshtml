@model MangaReader.Models.Manga
@using MangaReader.Utils
@using MangaReader.Utils.Constants

@{
    ViewData["Title"] = "Truyện";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var coversFolder = ViewBag.CoversFolder;
    var mangasFolder = ViewBag.MangasFolder;
    var basePath = ViewBag.BasePath;
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb mb-0">
        <li class="breadcrumb-item">
            <a class="text-decoration-none" asp-area="Dashboard" asp-controller="Home" asp-action="Index">Dashboard</a>
        </li>
        <li class="breadcrumb-item">
            <a class="text-decoration-none" asp-area="Dashboard" asp-controller="Mangas" asp-action="Index">Truyện</a>
        </li>
        <li class="breadcrumb-item">
            <a class="text-decoration-none"
               asp-area="Dashboard"
               asp-controller="Mangas"
               asp-action="Details"
               asp-route-id="@Model.Id">
                @Model.Title
            </a>
        </li>

        <li class="breadcrumb-item active" aria-current="page">Xóa</li>
    </ol>
</nav>


<h3 class="mb-0">Xóa truyện <span class="text-primary">@Model.Title</span> (không thể khôi phục)</h3>


<div class="card shadow-sm p-3 rounded-0 shadow-sm">
    <dl class="row">
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Cover)</dt>
        <dd class="col-sm-10">
            <img src="@($"/{basePath}/{mangasFolder}/{Model.Slug}/{coversFolder}/{Model.Cover}")"
                     alt="@Model.Title" style="max-width: 300px" />
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Model.Title
        </dd>

        @* <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Slug)
        </dt>
        <dd class="col-sm-10">
            @Model.Slug
        </dd> *@

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Genres)</dt>
        <dd class="col-sm-10">
            @if (Model.Genres != null && Model.Genres.Any())
            {
                @foreach (var genre in Model.Genres)
                {
                    <span class="badge bg-info me-1">@genre.Name</span>
                }
            }
            else
            {
                <span>N/A</span>
            }
        </dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.AuthorName)</dt>
        <dd class="col-sm-10">@Model.AuthorName</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.PublishedAt)</dt>
        <dd class="col-sm-10">@(Model.PublishedAt.ToString("yyyy-MM-dd"))</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Status)</dt>
        <dd class="col-sm-10">
            @switch (Model.Status)
            {
                case MangaStatusEnum.OnGoing:
                    <span class="badge bg-primary">@EnumUtils.GetEnumDisplayName(Model.Status)</span>
                    break;
                case MangaStatusEnum.Completed:
                    <span class="badge bg-success">@EnumUtils.GetEnumDisplayName(Model.Status)</span>
                    break;
                case MangaStatusEnum.Hiatus:
                    <span class="badge bg-warning text-white">@EnumUtils.GetEnumDisplayName(Model.Status)</span>
                    break;
                case MangaStatusEnum.Cancelled:
                    <span class="badge bg-danger">@EnumUtils.GetEnumDisplayName(Model.Status)</span>
                    break;
                default:
                    <span class="badge bg-secondary">@EnumUtils.GetEnumDisplayName(Model.Status)</span>
                    break;
            }
        </dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Description)</dt>
        <dd class="col-sm-10">@(!string.IsNullOrEmpty(Model.Description) ? Model.Description : "N/A")</dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedAt)
        </dt>
        <dd class="col-sm-10">
            @Model.CreatedAt.ToString("yyyy-MM-dd HH:mm")
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UpdatedAt)
        </dt>
        <dd class="col-sm-10">
            @Model.UpdatedAt.ToString("yyyy-MM-dd HH:mm")
        </dd>
    </dl>
    <form asp-action="Delete" class="d-flex flex-column flex-sm-row gap-2">
        <input type="hidden" asp-for="Id" class="d-flex flex-column flex-sm-row gap-2" />
        <input type="submit" value="Xóa" class="btn btn-danger" />
        <a class="btn btn-secondary text-white" asp-area="Dashboard" asp-controller="Mangas" asp-action="Details" asp-route-id="@Model?.Id">Quay lại</a>
    </form>
</div>