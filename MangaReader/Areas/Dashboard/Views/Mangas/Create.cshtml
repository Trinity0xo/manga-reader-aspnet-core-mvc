@using MangaReader.Utils.Constants
@model MangaReader.Dto.Manga.CreateMangaDto

@{
    ViewData["Title"] = "Truyện";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var Genres = ViewBag.Genres as List<MangaReader.Models.Genre>;
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb mb-0">
        <li class="breadcrumb-item">
            <a class="text-decoration-none" asp-area="Dashboard" asp-controller="Home" asp-action="Index">Dashboard</a>
        </li>
        <li class="breadcrumb-item">
            <a class="text-decoration-none" asp-area="Dashboard" asp-controller="Mangas" asp-action="Index">Truyện</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Tạo mới</li>
    </ol>
</nav>

<h3 class="mb-0">Tạo thể truyện mới</h3>

<div class="card shadow-sm p-3 rounded-0 shadow-sm">
    <form asp-action="Create" enctype="multipart/form-data" id="createMangaForm">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <h4 class="mb-3">Thông tin chung</h4>
        <div class="d-flex flex-column gap-3 mb-3">
            <div class="d-flex flex-column flex-md-row">
                <label asp-for="Cover" style="max-width: 300px" class="w-100 control-label">Ảnh bìa</label>
                <div class="d-flex flex-column w-100">
                    <input asp-for="Cover" type="file" class="form-control" accept="image/*" />
                    <span asp-validation-for="Cover" class="text-danger"></span>

                    <div class="mt-2">
                        <img id="coverPreview" src="#" alt="Preview" class="img-fluid d-none border rounded-0" />
                    </div>
                </div>
            </div>
            <div class="d-flex flex-column flex-md-row">
                <label asp-for="Title" style="max-width: 300px" class="w-100 control-label"></label>
                <div class="d-flex flex-column w-100">
                    <input asp-for="Title" class="form-control" placeholder="Tên truyện" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
            </div>

            <div class="d-flex flex-column flex-md-row">
                <label asp-for="Description" style="max-width: 300px" class="w-100 control-label"></label>
                <div class="d-flex flex-column w-100">
                    <textarea asp-for="Description" class="form-control" rows="3" placeholder="Mô tả"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>

            <div class="d-flex flex-column flex-md-row">
                <label asp-for="AuthorName" style="max-width: 300px" class="w-100 control-label"></label>
                <div class="d-flex flex-column w-100">
                    <input asp-for="AuthorName" class="form-control" placeholder="Tên tác giả" />
                    <span asp-validation-for="AuthorName" class="text-danger"></span>
                </div>
            </div>

            <div class="d-flex flex-column flex-md-row">
                <label asp-for="Status" style="max-width: 300px" class="w-100 control-label"></label>
                <div class="d-flex flex-column w-100">
                    <select asp-for="Status" class="form-select"
                            asp-items="Html.GetEnumSelectList<MangaStatusEnum>()">
                        <option value="">Chọn trạng thái</option>
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
            </div>

            <div class="d-flex flex-column flex-md-row">
                <label asp-for="PublishedAt" style="max-width: 300px" class="w-100 control-label"></label>
                <div class="d-flex flex-column w-100">
                    <input asp-for="PublishedAt" class="form-control" type="date" />
                    <span asp-validation-for="PublishedAt" class="text-danger"></span>
                </div>
            </div>

            <div class="d-flex flex-column flex-md-row">
                <label asp-for="GenreIds" style="max-width: 300px" class="w-100 control-label"></label>
                <div class="d-flex flex-column w-100">
                    <select asp-for="GenreIds"
                            asp-items="@(new MultiSelectList(Genres, "Id", "Name"))"
                            multiple
                            class="form-select">
                    </select>
                    <span asp-validation-for="GenreIds" class="text-danger"></span>
                </div>
            </div>

            <div class="d-flex flex-column flex-md-row">
                <div style="max-width: 300px" class="w-100"></div>
                <div class="d-flex flex-column flex-sm-row gap-2 mt-2 mt-md-0">
                    <input type="submit" value="Lưu" class="btn btn-primary" />
                    <a class="btn btn-secondary" asp-area="Dashboard" asp-controller="Mangas" asp-action="Index">Quay lại</a>
                </div>
            </div>
        </div>

        <h4 class="mb-3">Chương truyện</h4>
        <div id="chapterList" class="d-flex flex-column g-3">
        </div>

        <button type="button" class="btn btn-primary mb-3 w-auto" id="addChapterBtn">Thêm chương</button>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let chapterIndex = 0;

        function getChapterHtml(chapterIndex) {
            return `
                <div class="chapter card rounded-0 mb-3" data-index="${chapterIndex}">
                    <div class="card-header d-flex flex-column flex-md-row gap-2 gap-md-0 justify-content-start justify-content-md-between align-items-start align-items-md-center flex-wrap">
                        <span>Chương ${chapterIndex + 1}</span>
                        <div class="d-flex gap-2 flex-wrap">
                            <button type="button" class="btn btn-sm btn-outline-secondary toggle-chapter"
                                    data-bs-toggle="collapse" data-bs-target="#chapterBody_${chapterIndex}">
                                Thu gọn / Mở rộng
                            </button>
                            <button type="button" class="btn btn-sm btn-danger remove-chapter-button"
                                    data-index="${chapterIndex}">
                                Xóa
                            </button>
                        </div>
                    </div>
                    <div id="chapterBody_${chapterIndex}" class="collapse show">
                        <div class="card-body">
                            <div class="form-group mb-3">
                                <label for="Chapters_${chapterIndex}__Title" class="control-label">Tên chương</label>
                                <input type="text"
                                       name="Chapters[${chapterIndex}].Title"
                                       id="Chapters_${chapterIndex}__Title"
                                       class="form-control"  placeholder="Tên chương"/>
                                <span class="text-danger field-validation-valid"
                                      data-valmsg-for="Chapters[${chapterIndex}].Title"
                                      data-valmsg-replace="true"></span>
                            </div>
                            <div class="form-group mb-3">
                                <label for="Chapters_${chapterIndex}__Pages" class="control-label">
                                    Trang
                                </label>
                                <input type="file"
                                       name="Chapters[${chapterIndex}].Pages"
                                       id="Chapters_${chapterIndex}__Pages"
                                       class="form-control page-input"
                                       data-index="${chapterIndex}" multiple />
                                <small class="text-muted">Chọn nhiều ảnh một lúc</small>
                            </div>
                            <div id="pageList_${chapterIndex}" class="row"></div>
                        </div>
                    </div>
                </div>
            `;
        }

        function getPreviewPage(imageUrl) {
            return `
                <div class="col-xs-12 col-sm-6 col-md-4 mb-3">
                    <div class="card rounded-0">
                        <img src="${imageUrl}" class="img-fluid" alt="Page image">
                    </div>
                </div>
            `;
        }

        function addChapter() {
            const newChapterHtml = getChapterHtml(chapterIndex);
            $("#chapterList").append(newChapterHtml);
            chapterIndex++;
        }

        $("#addChapterBtn").on("click", function () {
            addChapter();
            $(form).removeData("validator").removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse("#createMangaForm");
        });

        $(document).on("change", "input[name='Cover']", function () {
            const file = this.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (ev) {
                    $("#coverPreview").attr("src", ev.target.result).removeClass("d-none");
                };
                reader.readAsDataURL(file);
            }
        });

        $(document).on("click", ".remove-chapter-button", function () {
            const index = $(this).data("index");
            $(`.chapter[data-index="${index}"]`).remove();
            chapterIndex = chapterIndex - 1;
            $(form).removeData("validator").removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse("#createMangaForm");
        });

        $(document).on("change", ".page-input", function () {
            const $input = $(this);
            const index = $input.data("index");
            const $previewContainer = $(`#pageList_${index}`);
            const files = Array.from($input[0].files);

            $previewContainer.empty();

            const filePromises = files.map((file) => {
                return new Promise((resolve, reject) => {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        resolve(e.target.result);
                    };
                    reader.onerror = reject;
                    reader.readAsDataURL(file);
                });
            });

            Promise.all(filePromises)
                .then((imageURLs) => {
                    imageURLs.forEach((imageURL) => {
                        $previewContainer.append(getPreviewPage(imageURL));
                    });
                })
                .catch((error) => console.error("Error loading images:", error));
        });
    </script>

}
