@model MangaReader.Dto.PageResponse<IEnumerable<Manga>>
@using MangaReader.Utils
@using MangaReader.Utils.Constants

@{
	ViewData["Title"] = "Truyện";
    var filterMangaDto = ViewBag.FilterMangaDto as MangaReader.Dto.Manga.FilterMangaDto ?? new MangaReader.Dto.Manga.FilterMangaDto();
    var Genres = ViewBag.Genres as List<MangaReader.Models.Genre> ?? [];
    var coversFolder = ViewBag.CoversFolder as string;
    var basePath = ViewBag.BasePath as string;
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb mb-0">
        <li class="breadcrumb-item">
            <a class="text-decoration-none" asp-controller="Home" asp-action="Index">Trang chủ</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Truyện</li>
    </ol>
</nav>

@if (!string.IsNullOrWhiteSpace(filterMangaDto.AuthorName))
{
    <h1 class="m-0">Truyện của tác giả <span class="text-primary">@filterMangaDto.AuthorName</span></h1>
}
else
{
    <h1 class="m-0">Truyện</h1>
}

@if (!string.IsNullOrWhiteSpace(filterMangaDto.Search))
{
    <div class="alert alert-success py-2 px-3 d-flex flex-column flex-md-row gap-md-0 gap-2 justify-content-between align-items-center m-0">
        <span>
            Kết quả cho từ khóa: <strong>@filterMangaDto.Search</strong>
            (tổng: @Model.TotalItems mục)
        </span>
        <a asp-action="Index" asp-route-AuthorName="@filterMangaDto.AuthorName"
            class="btn btn-outline-secondary">
            Đặt lại
        </a>
    </div>
}
   
<form asp-controller="Mangas" asp-action="Index" method="get" class="d-flex gap-2 flex-md-row flex-column"> 
    <input type="hidden" name="AuthorName" value="@filterMangaDto.AuthorName" />
    <div class="input-group">
        <input id="search" name="search" type="text" class="form-control"
                placeholder="Tìm theo tên..." value="@filterMangaDto.Search" />
        <button class="btn btn-primary d-flex align-items-center gap-1" type="submit">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
            </svg> Tìm
        </button>
    </div>
    <div class="flex-shrink-0">
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#filterModal">
            <span>Bộ lọc</span>
            @if (filterMangaDto.ActiveFilterCount > 0)
            {
                <span class="badge bg-warning rounded-circle">@filterMangaDto.ActiveFilterCount</span>
            }
        </button>

        <div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="filterModalLabel">Bộ lọc</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>

                    <div class="modal-body d-flex flex-column gap-3">
                        <div class="d-flex gap-3 align-items-start">
                            <h6 class="flex-shrink-0">Trạng thái:</h6>
                            <div class="d-flex gap-2 flex-wrap">
                                @foreach (var status in Enum.GetValues(typeof(MangaStatusEnum)).Cast<MangaStatusEnum>())
                                {
                                    var badgeClass = status switch
                                    {
                                        MangaStatusEnum.OnGoing => "bg-primary",
                                        MangaStatusEnum.Completed => "bg-success",
                                        MangaStatusEnum.Hiatus => "bg-warning text-white",
                                        MangaStatusEnum.Cancelled => "bg-danger",
                                        _ => "bg-secondary"
                                    };

                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="Status" value="@status"
                                                id="status_@status"
                                                @(filterMangaDto.Status != null && filterMangaDto.Status.Contains(status) ? "checked" : "")>
                                        <label class="form-check-label">
                                            <span class="badge @badgeClass">@EnumUtils.GetEnumDisplayName(status)</span>
                                        </label>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="d-flex gap-3 align-items-start">
                            <h6 class="flex-shrink-0">Thể loại:</h6>
                            <div class="d-flex gap-2 flex-wrap">
                                @foreach (var genre in Genres)
                                {
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox"
                                                name="Genres"
                                                value="@genre.Slug"
                                                id="genre_@genre.Slug"
                                                @(filterMangaDto.Genres != null && filterMangaDto.Genres.Contains(genre.Slug) ? "checked" : "")>
                                        <label class="form-check-label" for="genre_@genre.Slug">
                                            <span class="badge bg-secondary">@genre.Name</span>
                                        </label>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <a asp-action="Index"
                            asp-route-Search="@filterMangaDto.Search"
                            class="btn btn-secondary">
                            Đặt lại
                        </a>
                        <button type="submit" class="btn btn-primary">Áp dụng</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="row g-3">
    @foreach (var item in Model.Data)
    {
        <div class="col-lg-6">
            <div class="card rounded-0 flex-row align-items-start gap-3 p-3 shadow-sm">

                <div class="manga-cover" style="width: 25%">
                    <img src="@($"/{basePath}/{item.Slug}/{coversFolder}/{item.Cover}")" alt="@item.Cover" />
                </div>
            
                <div class="d-flex flex-column gap-2" style="min-width: 0">
                    <h2 class="m-0 text-truncate">
                        <a asp-controller="Mangas" asp-action="Details" asp-route-mangaSlug="@item.Slug" asp-route-mangaId="@item.Id"
                           class="text-decoration-none link-dark">
                            @item.Title
                        </a>
                    </h2>
                    @if (item.Genres.Count > 0)
                    {
                        <div>
                            @foreach (var genre in item.Genres)
                            {
                                <a asp-action="Index"
                                    asp-route-Genres="@genre.Slug"
                                    class="badge bg-secondary text-decoration-none link-light">
                                    @genre.Name
                                </a>
                            }
                        </div>
                    }
                    <div>
                        @{
                            var badgeClass = item.Status switch
                            {
                                MangaStatusEnum.OnGoing => "bg-primary",
                                MangaStatusEnum.Completed => "bg-success",
                                MangaStatusEnum.Hiatus => "bg-warning text-white",
                                MangaStatusEnum.Cancelled => "bg-danger",
                                _ => "bg-secondary"
                            };
                        }
                        <span class="badge @badgeClass">@EnumUtils.GetEnumDisplayName(@item.Status)</span>
                    </div>
                    <p class="m-0 text-truncate-4">@item.Description</p>
                </div>
            </div>
        </div>
    }
</div>
@if (Model.TotalPages > 1)
{
    <nav aria-label="Trang" class="d-flex justify-content-center">
        <ul class="pagination m-0 shadow-sm">
            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-Page="@(Model.CurrentPage - 1)"
                   asp-route-Search="@filterMangaDto.Search"
                   asp-route-AuthorName="@filterMangaDto.AuthorName"
                   asp-route-Genres="@string.Join(",", filterMangaDto.Genres ?? new List<string>())"
                   asp-route-Status="@string.Join(",", filterMangaDto.Status ?? new List<MangaStatusEnum>())">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-Page="@i"
                       asp-route-Search="@filterMangaDto.Search"
                       asp-route-AuthorName="@filterMangaDto.AuthorName"
                       asp-route-Genres="@string.Join(",", filterMangaDto.Genres ?? new List<string>())"
                       asp-route-Status="@string.Join(",", filterMangaDto.Status ?? new List<MangaStatusEnum>())">
                        @i
                    </a>
                </li>
            }

            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-Page="@(Model.CurrentPage + 1)"
                   asp-route-Search="@filterMangaDto.Search"
                   asp-route-AuthorName="@filterMangaDto.AuthorName"
                   asp-route-Genres="@string.Join(",", filterMangaDto.Genres ?? new List<string>())"
                   asp-route-Status="@string.Join(",", filterMangaDto.Status ?? new List<MangaStatusEnum>())">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
}

